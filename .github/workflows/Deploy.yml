name: 'Deploy'
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: mymindstorm/setup-emsdk@v14

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get -y install libboost-dev

      - name: Build WebClient, run cmake
        run: CC=emcc CXX=em++ emcmake cmake projects/web_client -B build_web_client

      - name: Build WebClient, run make
        run: cd build_web_client && emmake make && mv ../bin_web_client/WebClient.html ../bin_web_client/index.html

      - name: Build GameServer, run cmake
        run: cmake projects/server -B build_server

      - name: Build GameServer, run make
        run: cd build_server && cmake --build . --parallel 6

      - name: Build WebClientServer Docker image
        run: docker build -t jod.web_client_server:latest -f docker/web_client_server/Dockerfile .
      
      - name: Build GameServer Docker image
        run: docker build -t jod.game_server:latest -f docker/game_server/Dockerfile .

      - name: Save WebClientServer Docker image as tar file
        run: docker save -o WebClientServer.tar jod.web_client_server:latest

      - name: Save GameServer Docker image as tar file
        run: docker save -o GameServer.tar jod.game_server:latest

      - name: Add SSH key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p /home/runner/.ssh
          # Replace example.com with the hostname of the machine
          # you're SSH-ing into
          ssh-keyscan ${{ secrets.REMOTE_SERVER_ADDRESS }} >> /home/runner/.ssh/known_hosts
          # DOKKU_SSH_KEY is the name of the repository secret
          echo "${{ secrets.JOD_SSH_KEY }}" > /home/runner/.ssh/github_actions
          chmod 600 /home/runner/.ssh/github_actions
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add /home/runner/.ssh/github_actions

      - name: Transfer docker images to remote server
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          scp -o StrictHostKeyChecking=no WebClientServer.tar ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }}:${{ secrets.REMOTE_SERVER_PATH }}
          scp -o StrictHostKeyChecking=no GameServer.tar ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }}:${{ secrets.REMOTE_SERVER_PATH }}

      - name: Close existing tmux
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
          tmux has-session -t JOD_TMUX_SESSION 2>/dev/null

          if [ $? == 0 ]; then
            tmux kill-server
          fi
          ENDSSH

      - name: Stop all running docker containers
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} 'docker stop $(docker ps -a -q)'

      - name: Load docker images
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
          docker load -i WebClientServer.tar
          docker load -i GameServer.tar
          ENDSSH

      - name: Start servers in tmux
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
          tmux new-session -d -s JOD_TMUX_SESSION -n myWindow
          tmux split-window -hf
          tmux send-keys -t JOD_TMUX_SESSION:myWindow "docker run -p 80:80 jod.web_client_server:latest" Enter
          tmux select-pane -L
          tmux send-keys -t JOD_TMUX_SESSION:myWindow "docker run -ti -p 1238:1238 jod.game_server:latest" Enter
          tmux split-window -hf
          tmux select-pane -L
          ENDSSH




#      - name: Transfer Docker Compose file to remote server
#         env:
#           SSH_AUTH_SOCK: /tmp/ssh_agent.sock
#        run: |
#          scp -o StrictHostKeyChecking=no docker-compose.yaml ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }}:${{ secrets.REMOTE_SERVER_PATH }}

#      - name: Deploy Docker containers using Docker Compose on remote server
#         env:
#           SSH_AUTH_SOCK: /tmp/ssh_agent.sock
#        run: |
#          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
#          docker compose -f ${{ secrets.REMOTE_SERVER_PATH }}/docker-compose.yaml up -d
#          ENDSSH
